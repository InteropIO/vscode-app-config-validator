{
    "$id": "http://glue42.com/gd/system.json",
    "$schema": "http://json-schema.org/draft-06/schema#",
    "description": "Schema describing the system configuration in Glue42 Desktop.",
    "title": "SystemConfig",
    "type": "object",
    "properties": {
        "$schema": {
            "type": "string",
            "title": "Schema",
            "description": "Pointer to the schema against which this document should be validated."
        },
        "region": {
            "type": "string",
            "description": "Glue42 Desktop region",
            "default": "DEMO"
        },
        "env": {
            "type": "string",
            "description": "Glue42 Desktop environment",
            "default": "T42"
        },
        "enableGTF": {
            "type": "boolean",
            "description": "Activates the GTF setup.",
            "default": false
        },
        "auth": {
            "description": "Whether authentication is enabled or not. It can be `true`(will use the machine username with an empty string as a password), a `string` (will use the string as a username and an empty string as a password) or an object defining `authController`.",
            "oneOf": [
                {
                    "description": "If `false`, login is disabled, uses system username. If `true`, will use the default authentication mechanism.",
                    "type": "boolean",
                    "default": false
                },
                {
                    "description": "If `string`, authentication will be skipped and the specified string will be used as username. May not work in all environments.",
                    "type": "string"
                },
                {
                    "type": "object",
                    "description": "User credentials object.",
                    "required": [
                        "username",
                        "password"
                    ],
                    "properties": {
                        "username": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "gw": {
            "description": "Gateway configuration.",
            "type": "object",
            "properties": {
                "embedded": {
                    "description": "Whether to embed the Gateway in Glue42 Desktop or not.",
                    "type": "boolean"
                },
                "configuration": {
                    "$ref": "#/definitions/gatewayConfig"
                },
                "url": {
                    "description": "A host to connect to. Will be used only if `embedded` is `false`.",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "windows": {
            "description": "Defines defaults for various window settings like border color, size areas, buttons etc.",
            "default": {},
            "$ref": "#/definitions/windowsConfig"
        },
        "appStores": {
            "description": "Defines one or more sources of application configuration.",
            "type": "array",
            "items": {
                "$ref": "#/definitions/appStoreConfig"
            },
            "additionalProperties": false
        },
        "autoStart": {
            "description": "Defines auto-start batch parameters.",
            "type": "object",
            "default": {
                "priorityEnabled": true,
                "highPriorityBatchSize": 3,
                "highPriorityApplicationTimeout": 1000,
                "lowPriorityBatchSize": 5,
                "lowPriorityBatchDelay": 5000
            },
            "properties": {
                "priorityEnabled": {
                    "description": "If `true`, then apps will be started by priority.",
                    "type": "boolean"
                },
                "highPriorityBatchSize": {
                    "description": "The number of high priority applications from the same priority group that will be started together.",
                    "type": "number"
                },
                "highPriorityApplicationTimeout": {
                    "description": "A timeout in milliseconds that the system will use to wait for high priority applications to start.",
                    "type": "number"
                },
                "lowPriorityBatchSize": {
                    "description": "The number of low priority applications that will be started together in regular intervals (specified below).",
                    "type": "number"
                },
                "lowPriorityBatchDelay": {
                    "description": "The delay in milliseconds that the system will wait before running the next low priority applications batch.",
                    "type": "number"
                }
            },
            "additionalProperties": false
        },
        "splash": {
            "default": {},
            "$ref": "#/definitions/splashConfig"
        },
        "singleApp": {
            "description": "Enabling this option will run glue with only one app () and it will look for it at the provided path",
            "type": "string"
        },
        "showWindowsInTrayMenu": {
            "description": "Shows all windows in the system tray menu.",
            "type": "boolean",
            "default": true,
            "additionalProperties": false
        },
        "showAppsInTrayMenu": {
            "description": "Shows all applications in the system tray menu.",
            "type": "boolean",
            "default": true,
            "additionalProperties": false
        },
        "systemAppStores": {
            "description": "Defines stores that will hold system applications. These will be auto-started initially. Store is not monitored for changes.",
            "type": "array",
            "items": {
                "$ref": "#/definitions/appStoreConfig"
            },
            "additionalProperties": false
        },
        "processReuse": {
            "$ref": "#/definitions/processReuseSystemConfig"
        },
        "nodePath": {
            "description": "The path of the node.",
            "type": "string"
        },
        "issueReporting": {
            "type": "object",
            "description": "The issue reporting configuration in Glue42 Desktop.",
            "default": {
                "mail": {
                    "enabled": false
                },
                "jira": {
                    "enabled": false
                },
                "folderAttachments": []
            },
            "properties": {
                "attachScreenshots": {
                    "type": "boolean",
                    "description": "Attaches screenshots of all monitors to the issue report."
                },
                "jira": {
                    "description": "Jira configuration.",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enables the option to create a ticket with the issue.",
                            "default": "false"
                        },
                        "url": {
                            "type": "string",
                            "description": "The link to the Jira API."
                        },
                        "user": {
                            "type": "string",
                            "description": "The username of the user which will create the ticket."
                        },
                        "password": {
                            "type": "string",
                            "description": "The password of the user which will create the ticket"
                        },
                        "project": {
                            "type": "string",
                            "description": "The name of the project in which the ticket will be created."
                        },
                        "preferredRole": {
                            "type": "string"
                        },
                        "preferredRoleDescriptor": {
                            "type": "string"
                        },
                        "useProjectLeadAsPreferredAssignee": {
                            "type": "boolean"
                        }
                    },
                    "if": {
                        "properties": {
                            "enabled": {
                                "enum": [
                                    true
                                ]
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "url",
                            "user",
                            "password",
                            "project"
                        ]
                    },
                    "additionalProperties": false
                },
                "mail": {
                    "description": "The email configuration.",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enables the option to create a ticket with the issue.",
                            "default": "false"
                        },
                        "zipAttachments": {
                            "type": "boolean",
                            "description": "Archives the attachments."
                        },
                        "bugSubjectPrefix": {
                            "type": "string",
                            "description": "A string which will act as a prefix in the subject of the email when the issue is a bug."
                        },
                        "reportSubjectPrefix": {
                            "type": "string",
                            "description": "A string which will act as a prefix in the subject of the email when the issue is feedback."
                        },
                        "recipients": {
                            "type": "array",
                            "description": "The email addressess which will receive the issue report.",
                            "items": {
                                "type": "string",
                                "description": "Single email address."
                            }
                        },
                        "allowEditRecipients": {
                            "type": "boolean",
                            "description": "Enables the user to manually add more recipients."
                        },
                        "maxAttachmentMB": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "folderAttachments": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the attachment."
                            },
                            "folderPath": {
                                "type": "string",
                                "description": "Path to the folder."
                            },
                            "zipFolderPath": {
                                "type": "string",
                                "description": "Path in the zip folder."
                            },
                            "filter": {
                                "type": "string",
                                "description": "Filter what will be applied to each file in the folder."
                            }
                        },
                        "required": [
                            "name",
                            "folderPath",
                            "zipFolderPath",
                            "filter"
                        ],
                        "additionalProperties": false
                    },
                    "additionalProperties": false
                }
            },
            "required": [
                "jira",
                "mail",
                "folderAttachments"
            ],
            "additionalProperties": false
        },
        "crashReporter": {
            "type": "object",
            "description": "The crash reporter configuration in Glue42 Desktop",
            "default": {
                "enabled": true,
                "folderPath": "%LocalAppData%/Tick42/UserData/%GLUE-ENV%-%GLUE-REGION%/crashes",
                "companyName": "Tick42",
                "productName": "Glue42",
                "output": {
                    "type": "local"
                }
            },
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables the entire crash reporter"
                },
                "folderPath": {
                    "type": "string",
                    "description": "Defines the output location for the crash reporter logging and memory dumps if output local is enabled"
                },
                "companyName": {
                    "type": "string",
                    "description": "The name of the company to be included in the crash report payload"
                },
                "productName": {
                    "type": "string",
                    "description": "The name of the product to be included in the crash report payload"
                },
                "output": {
                    "description": "Defines the type of the output: local or server and the serverUrl to receive the crash report",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Defines how the crash report output should be handled: saved locally or send over http to a server",
                            "enum": [
                                "local",
                                "server",
                                "backtrace"
                            ]
                        },
                        "serverUrl": {
                            "type": "string",
                            "description": "Sets the url of the server to receive the crash report of the output type was set to server"
                        },
                        "backTraceConfig": {
                            "type": "object",
                            "description": "Defines the configuration for the BackTrace client",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "Sets the unique token for sending data to BackTrace"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Sets the url of the BackTrace server"
                                },
                                "handleMainExceptions": {
                                    "type": "string",
                                    "description": "Enables sending unhandled exceptions in the main process to BackTrace: 'all' will send both uncaught exceptions and unhandled promises, 'only-errors' wil not send unhandled promises ",
                                    "enum": [
                                        "all",
                                        "only-errors"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "token",
                                "url"
                            ]
                        }
                    },
                    "if": {
                        "properties": {
                            "type": {
                                "enum": [
                                    "server"
                                ]
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "serverUrl"
                        ]
                    },
                    "additionalProperties": false
                }
            },
            "required": [
                "companyName",
                "productName",
                "folderPath",
                "enabled",
                "output"
            ],
            "additionalProperties": false
        },
        "useEmbeddedShell": {
            "description": "Whether to use the embedded shell application.",
            "type": "boolean",
            "default": true
        },
        "registerHtmlContainer": {
            "description": "Whether to inject the `htmlContainer` object. It will be used for legacy application.",
            "type": "boolean",
            "default": false
        },
        "licREST": {
            "description": "",
            "type": "string"
        },
        "activityColors": {
            "description": "Colors that will be used for the borders of activities.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "#4b5d60",
                "#394e78",
                "#31758c",
                "#318c71",
                "#657839"
            ]
        },
        "hotkeys": {
            "description": "Hotkeys configuration.",
            "default": true,
            "oneOf": [
                {
                    "description": "Whether hotkeys are enabled or not.",
                    "type": "boolean"
                },
                {
                    "$ref": "#/definitions/hotkeys"
                }
            ]
        },
        "swimlane": {
            "$ref": "#/definitions/swimlaneConfig"
        },
        "extensions": {
            "description": "Array of extensions to be added. Each item is a path to a folder that contains the extension.",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "devToolsExtensions": {
            "description": "Array of extensions to be added to devTools. Each item is a path to a folder that contains the extension.",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "layouts": {
            "defaults": {},
            "$ref": "#/definitions/layoutsConfig"
        },
        "themes": {
            "description": "Themes API configuration",
            "type": "object",
            "default": {
                "setThemesMethodName": "Connect.ChangeTheme",
                "getThemesMethodName": "Connect.GetThemes",
                "sharedContextName": "Connect.Themes"
            },
            "properties": {
                "setThemesMethodName": {
                    "type": "string",
                    "description": "Registered method name into agm for applying of themes",
                    "default": "Connect.ChangeTheme"
                },
                "getThemesMethodName": {
                    "type": "string",
                    "description": "Registered method name into agm for retrieve of themes",
                    "default": "Connect.GetThemes"
                },
                "sharedContextName": {
                    "type": "string",
                    "description": "Themes shared context name",
                    "default": "Connect.Themes"
                }
            },
            "additionalProperties": false
        },
        "applications": {
            "defaults": {},
            "$ref": "#/definitions/applicationsConfig"
        },
        "folders": {
            "default": {},
            "$ref": "#/definitions/foldersConfig"
        }
    },
    "definitions": {
        "appStoreConfig": {
            "oneOf": [
                {
                    "$ref": "#/definitions/appStorePathConfig"
                },
                {
                    "$ref": "#/definitions/appStoreGcsConfig"
                },
                {
                    "$ref": "#/definitions/appStoreRestConfig"
                },
                {
                    "$ref": "#/definitions/singleAppStorePathConfig"
                }
            ]
        },
        "appStorePathConfig": {
            "type": "object",
            "required": [
                "type",
                "details"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "enum": [
                        "path"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "path"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "singleAppStorePathConfig": {
            "type": "object",
            "required": [
                "type",
                "details"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "enum": [
                        "singleApp"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "path"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "appStoreGcsConfig": {
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "enum": [
                        "cm",
                        "gcs"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [],
                    "additionalProperties": false,
                    "properties": {
                        "url": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "appStoreRestConfig": {
            "type": "object",
            "required": [
                "type",
                "details"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "enum": [
                        "rest"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "url"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "url": {
                            "description": "The search url of the GCS server providing application configurations.",
                            "type": "string"
                        },
                        "auth": {
                            "type": "string",
                            "description": "The way this app-store will connect to a protected server.",
                            "enum": [
                                "no-auth",
                                "negotiate",
                                "kerberos"
                            ],
                            "default": "no-auth"
                        },
                        "pollInterval": {
                            "description": "How often (milliseconds) should gd make rest calls to the GCS server.",
                            "type": "number",
                            "default": 60000
                        },
                        "enablePersistentCache": {
                            "description": "Whether to store the most recent data response on disk. This allows starting glue-desktop later (with cached app configs) even if the GCS rest server is temporarily down.",
                            "type": "boolean",
                            "default": true
                        },
                        "cacheFolder": {
                            "description": "The location of the cache files.",
                            "type": "string",
                            "default": "%LocalAppData%/Tick42/UserData/%GLUE-ENV%-%GLUE-REGION%/gcsCache"
                        }
                    }
                }
            }
        },
        "windowsConfig": {
            "properties": {
                "minWidth": {
                    "description": "Specify default minimum window width.",
                    "type": "number"
                },
                "maxWidth": {
                    "description": "Specify default maximum window width.",
                    "type": "number"
                },
                "minHeight": {
                    "description": "Specify default minimum window height.",
                    "type": "number"
                },
                "maxHeight": {
                    "description": "Specify default maximum window height.",
                    "type": "number"
                },
                "focus": {
                    "description": "If `false`, the window will not take focus when created.",
                    "type": "boolean",
                    "default": true
                },
                "enableEventLogging": {
                    "description": "If `true`, will log each window event received from individual windows.",
                    "type": "boolean",
                    "default": true
                },
                "contextMenu": {
                    "description": "Specify default context menu properties.",
                    "properties": {
                        "enabled": {
                            "description": "If `true`, then the context menu will be enabled, otherwise it will be disabled.",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "additionalProperties": false
                },
                "security": {
                    "default": {
                        "webSecurity": true,
                        "popups": false,
                        "stopLoadingOnCertificationErrors": true,
                        "navigateOnDragDrop": false,
                        "sandbox": true,
                        "contextIsolation": false,
                        "nodeIntegration": false
                    },
                    "$ref": "#/definitions/securityConfig"
                },
                "downloadSettings": {
                    "default": {
                        "autoSave": true,
                        "autoOpenPath": false,
                        "autoOpenDownload": false,
                        "enable": true,
                        "enableDownloadBar": true,
                        "path": "%DownloadsFolder%"
                    },
                    "$ref": "#/definitions/downloadConfig"
                },
                "refreshHandlers": {
                    "description": "Configuration about refresh handlers",
                    "default": {
                        "enabled": true,
                        "timeout": 2000
                    },
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "timeout": {
                            "description": "The maximum amount of time (ms) that a refresh handler will have to complete its operation",
                            "type": "number"
                        }
                    },
                    "additionalProperties": false
                },
                "closeHandlers": {
                    "description": "Configuration about close handlers",
                    "default": {
                        "enabled": true,
                        "timeout": 2000
                    },
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "timeout": {
                            "description": "The maximum amount of time (ms) that a close handler will have to complete its operation",
                            "type": "number"
                        }
                    },
                    "additionalProperties": false
                },
                "injectSIDtoContext": {
                    "description": "Whether to inject the SID after successful SSO authentication into window's context",
                    "type": "boolean",
                    "default": false
                },
                "zoom": {
                    "default": {
                        "enabled": true,
                        "mouseWheelZoom": false,
                        "factors": [
                            25,
                            33,
                            50,
                            67,
                            75,
                            80,
                            90,
                            100,
                            110,
                            125,
                            150,
                            175,
                            200,
                            250,
                            300,
                            400,
                            500
                        ],
                        "defaultFactor": 100
                    },
                    "$ref": "#/definitions/zoomConfig"
                },
                "hideGroupHeader": {
                    "description": "When true all windows are created with their group having a hidden header (Meaning that when a windows sticks to another window there will be no group header)",
                    "type": "boolean",
                    "default": false
                },
                "autoInjectAPI": {
                    "description": "Specifies if @glue42/desktop API should be auto-injected into the window context (making Glue factory function available without referencing desktop.js file). The API can also be auto-initialized.",
                    "type": "object",
                    "required": [
                        "enabled",
                        "version"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false
                        },
                        "version": {
                            "type": "string",
                            "description": "Version of the API that will be injected. Can be sem version."
                        },
                        "autoInit": {
                            "default": false,
                            "description": "If set will auto initialize glue",
                            "oneOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            ]
                        },
                        "rest": {
                            "type": "string",
                            "description": "URL to a REST service which will be asked for latest glue.js version on startup. The REST should implement"
                        }
                    }
                },
                "historyNavigationEnabled": {
                    "description": "If `true`, will allow users to navigate back (`CTRL+Left`) and forward (`CTRL+Right`) through the web page history.",
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false
        },
        "splashConfig": {
            "description": "Splash screen configuration.",
            "properties": {
                "url": {
                    "description": "The URL, where the splash screen is hosted.",
                    "default": "file://%GDDIR%/assets/splash/splash.html",
                    "type": "string"
                },
                "width": {
                    "description": "Specify window width.",
                    "default": 350,
                    "type": "number"
                },
                "height": {
                    "description": "Specify window height.",
                    "default": 233,
                    "type": "number"
                }
            },
            "additionalProperties": false
        },
        "processReuseConfig": {
            "description": "Process reuse configuration.",
            "type": "object",
            "properties": {
                "maxAppsInProcess": {
                    "description": "Maximum number of application windows in a single process",
                    "type": "number",
                    "default": 9
                },
                "appSlotSize": {
                    "description": "When an app is started in a process a slot is reserved in this process only for instances of the same app - this setting defines the size of this slot. This is helpful for keeping the same applications in the same process.",
                    "type": "number",
                    "default": 3
                }
            },
            "additionalProperties": false
        },
        "hotkeys": {
            "description": "Hotkey settings.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "blacklist": {
                    "type": "array",
                    "description": "List of applications that cannot register hotkeys. Any app that is not on the list can register hotkeys.",
                    "items": {
                        "type": "string",
                        "description": "Single email."
                    }
                },
                "whitelist": {
                    "type": "array",
                    "description": "List of applications that can register hotkeys. Any app that is not on the list cannot register hotkeys.",
                    "items": {
                        "type": "string",
                        "description": "Single email."
                    }
                },
                "reservedHotkeys": {
                    "type": "array",
                    "description": "List of reserved hotkeys that apps cannot override.",
                    "items": {
                        "type": "string",
                        "description": "Single email."
                    }
                }
            },
            "additionalProperties": false
        },
        "gatewayConfig": {
            "type": "object",
            "properties": {
                "showConsole": {
                    "description": "If `true`, the console will be visible.",
                    "type": "boolean"
                },
                "port": {
                    "description": "The Gateway will start on that port.",
                    "type": "integer",
                    "default": 8080
                },
                "logLevel": {
                    "type": "string"
                },
                "logConfig": {
                    "type": "object",
                    "properties": {
                        "appenders": {},
                        "categories": {}
                    },
                    "additionalProperties": false
                },
                "cluster": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false
                        },
                        "configuration": {
                            "type": "object",
                            "properties": {
                                "binding": {
                                    "type": "object",
                                    "properties": {
                                        "port": {
                                            "type": "number",
                                            "default": 8085
                                        },
                                        "ip": {
                                            "type": "string",
                                            "default": "0.0.0.0"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "node_id": {
                                    "type": "number",
                                    "description": "specifies the unique node id in the mesh - this is required for static directories. make sure that different gateways in the same mesh have different ids"
                                },
                                "directory": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "default": "rest"
                                        },
                                        "config": {
                                            "type": "object",
                                            "properties": {
                                                "directory_uri": {
                                                    "type": "string",
                                                    "default": "http://localhost:8888"
                                                },
                                                "announce_interval": {
                                                    "type": "number",
                                                    "default": 10000
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "members": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/meshStaticMember"
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "securityConfig": {
            "description": "Global security settings.",
            "properties": {
                "webSecurity": {
                    "description": "When `false`, the same-origin policy will be disabled (usually used when testing web apps) and `allowRunningInsecureContent` will be set to `true`, if not already set to `true` by the user.",
                    "type": "boolean"
                },
                "popups": {
                    "description": "",
                    "type": "boolean"
                },
                "stopLoadingOnCertificationErrors": {
                    "description": "",
                    "type": "boolean"
                },
                "navigateOnDragDrop": {
                    "description": "Whether dragging and dropping a file or link onto the page triggers navigation.",
                    "type": "boolean"
                },
                "sandbox": {
                    "description": "If set, this will sandbox the renderer associated with the window, making it compatible with the Chromium OS-level sandbox and disabling the Node.js engine.",
                    "type": "boolean"
                },
                "contextIsolation": {
                    "description": "",
                    "type": "boolean"
                },
                "nodeIntegration": {
                    "description": "Whether node integration is enabled.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false
        },
        "swimlaneConfig": {
            "description": "Swimlane configurations",
            "type": "object",
            "default": {
                "workspace": {
                    "allowDrop": true,
                    "allowExtract": true,
                    "actionButtonTooltip": "Workspace options",
                    "addButtonTooltip": "Add workspace"
                },
                "hibernation": {
                    "enabled": false,
                    "interval": 10,
                    "workspacesToClose": 1,
                    "rules": [
                        {
                            "enabled": true,
                            "type": "InsufficientSystemMemoryRule",
                            "threshold": 2048
                        },
                        {
                            "enabled": true,
                            "type": "WorkspaceIdleTimeRule",
                            "threshold": 120
                        },
                        {
                            "enabled": true,
                            "type": "MaximumActiveWorkspacesRule",
                            "threshold": 5
                        }
                    ]
                },
                "detailsApp": {
                    "managePopup": true
                },
                "saveApplicationContext": true,
                "saveActivityContext": false
            },
            "properties": {
                "loadControl": {
                    "$ref": "#/definitions/loadControlConfig"
                },
                "hibernation": {
                    "$ref": "#/definitions/hibernationConfig"
                },
                "frame": {
                    "description": "Frame configurations",
                    "type": "object",
                    "properties": {
                        "lockdown": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    },
                    "additionalProperties": false
                },
                "workspace": {
                    "description": "Configuration properties for workspace tab",
                    "type": "object",
                    "default": {
                        "allowDrop": true,
                        "allowExtract": true,
                        "actionButtonTooltip": "Workspace options",
                        "addButtonTooltip": "Add workspace"
                    },
                    "properties": {
                        "allowDrop": {
                            "description": "Indicates whether workspace tab can be 'dropped' inside into other workspaces. ",
                            "type": "boolean",
                            "default": true
                        },
                        "allowExtract": {
                            "description": "Indicates whether workspace tab can be 'extracted' from layout. If the property is set to 'true', workspace can be dragout outside of the layout",
                            "type": "boolean",
                            "default": true
                        },
                        "actionButtonTooltip": {
                            "description": "Tooltip text, which will be showed when mouse hover tooltip button",
                            "type": "string",
                            "default": "Workspace options"
                        },
                        "addButtonTooltip": {
                            "description": "Tooltip text, which will be showed when mouse hover add workspace button. Add workspace button is the button, which is placed next to all open workspaces",
                            "type": "string",
                            "default": "Add workspace"
                        }
                    },
                    "additionalProperties": false
                },
                "saveApplicationContext": {
                    "description": "Whatever to save the application context",
                    "type": "boolean"
                },
                "saveActivityContext": {
                    "description": "Whatever to save the activity context",
                    "type": "boolean"
                },
                "detailsApp": {
                    "description": "Configure the GD to work with canvas details apps with different behaviors",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                        "managePopup": {
                            "description": "Indicates whether GD should manage the visibility of the detailsApp",
                            "type": "boolean",
                            "default": true
                        }
                    }
                }
            },
            "additionalProperties": false
        },
        "hibernationConfig": {
            "description": "",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "",
                    "type": "boolean"
                },
                "interval": {
                    "description": "",
                    "type": "number"
                },
                "workspacesToClose": {
                    "description": "",
                    "type": "number"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hibernationRuleConfig"
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "hibernationRuleConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": "",
                    "enum": [
                        "InsufficientSystemMemory",
                        "MaximumActiveWorkspaces",
                        "WorkspaceIdleTime"
                    ]
                },
                "threshold": {
                    "type": "number",
                    "description": ""
                }
            },
            "required": [
                "enabled",
                "type",
                "threshold"
            ],
            "additionalProperties": false
        },
        "loadControlConfig": {
            "description": "Configuration for the load order of applications when restoring workspaces in Swimlane.",
            "type": "object",
            "properties": {
                "restoreStrategy": {
                    "type": "string",
                    "description": "Default restore strategy when restoring Swimlane workspaces.",
                    "enum": [
                        "direct",
                        "delayed",
                        "lazy"
                    ]
                },
                "initialOffsetInterval": {
                    "type": "number",
                    "description": "Valid only in delayed mode."
                },
                "interval": {
                    "type": "number",
                    "description": "Valid only in delayed mode."
                },
                "batch": {
                    "type": "number",
                    "description": "Valid only in delayed mode."
                },
                "showDelayedIndicator": {
                    "type": "boolean",
                    "description": "",
                    "default": false
                }
            },
            "additionalProperties": false
        },
        "downloadConfig": {
            "description": "Object that defines file download behavior in the window.",
            "type": "object",
            "properties": {
                "autoSave": {
                    "description": "If `true`, will auto save the file (without asking the user where to save it). If `false`, a system save dialog will appear.",
                    "type": "boolean"
                },
                "autoOpenPath": {
                    "description": "If `true`, will open the folder that contains the downloaded file after the download is completed.",
                    "type": "boolean"
                },
                "autoOpenDownload": {
                    "description": "If `true`, will open the download file after the download is completed.",
                    "type": "boolean"
                },
                "enable": {
                    "description": "If `true`, enables windows to download files.",
                    "type": "boolean"
                },
                "enableDownloadBar": {
                    "description": "If `true`, a download bar tracking the progress will appear at the bottom of the window when downloading. If `false`, the download process will be invisible.",
                    "type": "boolean"
                },
                "path": {
                    "description": "Path where the file will be saved.",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "layoutsConfig": {
            "description": "Layouts configuration",
            "type": "object",
            "additionalProperties": false,
            "default": {},
            "properties": {
                "store": {
                    "properties": {
                        "type": {
                            "description": "If true will auto save the file (without asking the user where to save it). If false a system save dialog will appear.",
                            "enum": [
                                "file",
                                "rest"
                            ],
                            "default": "file"
                        },
                        "restURL": {
                            "description": "If in REST mode the URL of the rest service",
                            "type": "string"
                        },
                        "restFetchInterval": {
                            "description": "If in REST mode the interval (in seconds) on which a new data will be fetched from the REST service",
                            "type": "number",
                            "default": 10
                        },
                        "restClientAuth": {
                            "description": "If in REST mode the client auth mechanism",
                            "default": "negotiate",
                            "enum": [
                                "no-auth",
                                "negotiate",
                                "kerberos"
                            ]
                        }
                    }
                },
                "swimlaneImportExportV1Layouts": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "processReuseSystemConfig": {
            "description": "Process reuse configuration.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": "true"
                },
                "visibleApps": {
                    "$ref": "#/definitions/processReuseConfig"
                },
                "hiddenApps": {
                    "$ref": "#/definitions/processReuseConfig"
                },
                "groupAutoStartedByPriorityBatchNumber": {
                    "description": "If true will group auto started apps by their priority group. Only works if autoStart priority is enabled.",
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false
        },
        "applicationsConfig": {
            "description": "Application configuration",
            "type": "object",
            "additionalProperties": false,
            "default": {},
            "properties": {
                "icons": {
                    "$ref": "#/definitions/iconsConfig"
                }
            }
        },
        "iconsConfig": {
            "description": "Icons configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "rejectUnauthorized": {
                    "description": "If not false, the server certificate is verified against the list of supplied CAs.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "zoomConfig": {
            "description": "Zoom configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "description": "Whether to enable or disable the zoom.",
                    "type": "boolean"
                },
                "mouseWheelZoom": {
                    "description": "Zoom when using the mouse wheel in combination with holding Ctrl.",
                    "type": "boolean"
                },
                "factors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "defaultFactor": {
                    "description": "Default zoom level",
                    "type": "number"
                }
            }
        },
        "meshStaticMember": {
            "type": "object",
            "properties": {
                "node": {
                    "type": "number"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "foldersConfig": {
            "description": "Configuration about folders location",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "userData": {
                    "descriptions": "Where user data is located. It contains layouts, logs, cache and other system information. Can you env variables to configure the path to it.",
                    "type": "string"
                }
            }
        },
        "cascadeConfig": {
            "description": "Whether to open new window instances of the application in a cascade. If set to `true` (default), the default offset value (50 px) will be used. If set to a number, the specified number will be used as an offset for new window instances.",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "description": "Whether to enable or disable window cascading.",
                    "type": "boolean",
                    "default": true
                },
                "offset": {
                    "description": "The offset for the new window instance (in pixels). The minimum value is 30.",
                    "type": "number",
                    "default": 50
                }
            }
        }
    },
    "additionalProperties": false
}